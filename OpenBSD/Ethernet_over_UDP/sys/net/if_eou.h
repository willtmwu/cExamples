#ifndef _NET_EOU_H
#define _NET_EOU_H

#define DEFAULT_SERVER_PORT	3301

#define EOU_T_DATA 0x0000
#define EOU_T_PING 0x8000
#define EOU_T_PONG 0x8001

#define PING_HEARTBEAT 		30
#define PING_HEARTATTACK	101

struct eou_header {
	uint32_t eou_network;
	uint16_t eou_type;
} __packed;

struct eou_pingpong {
	struct eou_header hdr;
	uint16_t _pad;
	uint64_t utime; /* Current time in seconds past UNIX epoch */
	uint8_t random[32];
	uint8_t mac[8]; /* Message Authentication Code, generated uping SipHash24 algorithm*/
	/* MAC is generated by Network ID, utime and random field */
} __packed;

struct eou_softc {
	RB_ENTRY(eou_softc) entry;

	struct arpcom	sc_ac;
	struct ifmedia	sc_media;
	struct ifnet	*sc_ifp;

	uint32_t		 	tun_id;		/* Unique Tunnel ID */
	struct socket 			*sc_send;  	/* the soconnect socket */
	struct sockaddr_storage		sc_src; 
	struct sockaddr_storage	 	sc_dst;
	in_port_t		 	sc_dstport;

	u_int32_t		 	sc_vnetid;

	struct timeout			timer_heartbeat;
	struct timeout 			timer_heartattack;
	//uint64_t 			last_pong_time;	/* Last correct pong time */

	//u_int			 	sc_rdomain;
	//u_int8_t		 	sc_ttl;

};

struct eou_tunnel {
	RB_ENTRY(eou_tunnel) entry;

	uint32_t		tun_id;		/* Unique Tuneel ID */
	struct sockaddr_storage tun_src;
	struct sockaddr_storage tun_dst;
	in_port_t		tun_dstport;

	//struct socket 	*so_bind;	/* so_recv */
	struct socket 	*so_connect; 	/* so_send */
	uint32_t	eou_nets;	/* The num of eou using this tunnel*/
};

#endif
